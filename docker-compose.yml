services:
  db:
    image: postgres:latest
    container_name: postgres_db
    hostname: postgres_db
    environment:
      POSTGRES_DB: crypto_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d crypto_db"]
      interval: 2s
      timeout: 2s
      retries: 10

  dbinit:
    build:
      context: .
      dockerfile: Dockerfile.base
    working_dir: /app/DatabaseService
    environment:
      - DB_HOST=postgres_db
    command: sh -c "javac -encoding UTF-8 -cp .:/app/shared/json.jar:/app/shared/postgresql-42.7.7.jar *.java && java -cp .:/app/shared/json.jar:/app/shared/postgresql-42.7.7.jar DatabaseSeeder"
    depends_on:
      db:
        condition: service_healthy

  datacollector:
    build:
      context: .
      dockerfile: Dockerfile.base
    environment:
      - DB_HOST=postgres_db
    working_dir: /app/DataCollectorService
    command: >
      sh -c "
        javac -encoding UTF-8 -cp .:/app/shared/json.jar:/app/shared/postgresql-42.7.7.jar:/app/DatabaseService *.java /app/DatabaseService/*.java &&
        java -cp .:/app/shared/json.jar:/app/shared/postgresql-42.7.7.jar:/app/DatabaseService Main
      "
    depends_on:
      - db
      - dbinit

  cryptopriceapi:
    build:
      context: .
      dockerfile: Dockerfile.base
    ports:
      - "8080:8080"
    working_dir: /app/CryptoPriceAPI
    command: >
      sh -c "
        javac -encoding UTF-8 -cp .:/app/shared/json.jar:/app/shared/postgresql-42.7.7.jar:/app/DatabaseService *.java /app/DatabaseService/*.java &&
        java -cp .:/app/shared/json.jar:/app/shared/postgresql-42.7.7.jar:/app/CryptoPriceAPI:/app/DatabaseService WebServer
      "
    depends_on:
      - db
      - dbinit

  graphservice:
    build:
      context: .
      dockerfile: Dockerfile.base
    ports:
      - "8081:8081"
    working_dir: /app/GraphService
    command: >
      sh -c "
        javac -encoding UTF-8 -cp .:/app/shared/json.jar:/app/shared/jfreechart.jar:/app/shared/jcommon.jar:/app/shared/postgresql-42.7.7.jar /app/DatabaseService/*.java *.java &&
        java -cp .:/app/shared/json.jar:/app/shared/jfreechart.jar:/app/shared/jcommon.jar:/app/shared/postgresql-42.7.7.jar:/app/DatabaseService GraphServer
      "
    depends_on:
      - db
      - dbinit

  regressionservice:
    build:
      context: .
      dockerfile: Dockerfile.base
    ports:
      - "8082:8082"
    working_dir: /app/RegressionService
    command: sh -c "javac -encoding UTF-8 -cp .:/app/shared/json.jar:/app/shared/jfreechart.jar:/app/shared/jcommon.jar *.java && java -cp .:/app/shared/json.jar:/app/shared/jfreechart.jar:/app/shared/jcommon.jar RegressionServer"
    depends_on:
      - db
      - dbinit

  frontend:
    image: nginx:alpine
    container_name: frontend
    volumes:
      - ./index.html:/usr/share/nginx/html/index.html:ro
    ports:
      - "8083:80"
    depends_on:
      - datacollector
      - cryptopriceapi
      - graphservice
      - regressionservice

volumes:
  pg_data:
